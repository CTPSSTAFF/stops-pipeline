{
    "run_flags": {
        "CONDUCT_REPORT_GENERATION": true
    },
    "csv_input_folderpath": "extracted_csv_tables",
    "report_output_folderpath": "reporting_data",
    "aliases_not_included": [],
    "aliases_to_include_in_report": [
        "Y2024",
        "Y2045",
        "Y2050",
        "se2019-skim1-type0",
        "se2019-skim2-type0",
        "se2024-skim2-type0"
    ],
    "data_query_reports": [
        {
            "output_filename": "rapid_transit_comparison.csv",
            "sql_query": [
                "SELECT * FROM [10.01]",
                "WHERE Route_ID IN ['Green-B&T', 'Green-C&T', 'Green-D&T', 'Green-E&T', 'Mattapan&T', 'Orange&T', 'Red&T', 'Blue&T']"
            ]
        },
        {
            "output_filename": "avg_weekday_transit_boarding.csv",
            "sql_query": [
                "SELECT * FROM [10.01] WHERE Route_ID == 'Total'"
            ]
        },
        {
            "output_filename": "avg_weekday_commuter_rail_boarding.csv",
            "sql_query": [
                "SELECT * FROM [10.01] WHERE Route_ID LIKE 'CR-%'"
            ]
        },
        {
            "output_filename": "avg_weekday_mbta_ferry_boarding.csv",
            "sql_query": [
                "SELECT * FROM [10.01] WHERE Route_ID LIKE 'Boat-%'"
            ]
        },
        {
            "output_filename": "avg_weekday_mbta_boarding_by_mode.csv",
            "sql_query": [
                "WITH CategorizedData AS (",
                "    SELECT *,",
                "        CASE",
                "            WHEN Route_ID LIKE 'CR-%' THEN 'Commuter Rail'",
                "            WHEN Route_ID LIKE 'Boat-%' THEN 'Ferry'",
                "            WHEN Route_ID IN ('Red&T', 'Orange&T', 'Blue&T') THEN 'Heavy Rail'",
                "            WHEN Route_ID IN ('Mattapan&T', 'Green-B&T', 'Green-C&T', 'Green-D&T', 'Green-E&T') THEN 'Light Rail'",
                "            WHEN Route_ID IN ('1&T', '15&T', '22&T', '23&T', '28&T', '32&T', '39&T', '57&T', '66&T', '71&T', '73&T', '77&T', '111&T', '116&T', '117&T') THEN 'MBTA Key Bus'",
                "            WHEN Route_ID IN ('354&T', '426&T', '428&T', '450&T', '501&T', '504&T', '505&T') THEN 'MBTA Express Bus'",
                "            WHEN Route_ID IN ('4&T', '7&T', '8&T', '9&T', '10&T', '11&T', '14&T', '16&T', '17&T', '18&T', '19&T', '21&T', '24&T', '26&T', '29&T', '30&T', '31&T', '3233&T', '33&T', '34&T', '34E&T', '35&T', '36&T', '37&T', '38&T', '40&T', '4050&T', '41&T', '42&T', '43&T', '44&T', '45&T', '47&T', '50&T', '51&T', '52&T', '55&T', '59&T', '60&T', '61&T', '62&T', '627&T', '64&T', '65&T', '67&T', '68&T', '69&T', '70&T', '74&T', '75&T', '76&T', '78&T', '80&T', '83&T', '85&T', '86&T', '87&T', '88&T', '89&T', '8993&T', '90&T', '91&T', '92&T', '93&T', '94&T', '95&T', '96&T', '97&T', '99&T', '100&T', '101&T', '104&T', '105&T', '106&T', '108&T', '109&T', '110&T', '112&T', '114&T', '119&T', '120&T', '121&T', '131&T', '132&T', '134&T', '137&T', '171&T', '195&T', '201&T', '202&T', '210&T', '211&T', '215&T', '216&T', '217&T', '220&T', '222&T', '225&T', '226&T', '230&T', '236&T', '238&T', '240&T', '245&T', '350&T', '351&T', '411&T', '424&T', '429&T', '430&T', '435&T', '436&T', '439&T', '441&T', '441442&T', '442&T', '451&T', '455&T', '456&T', '553&T', '554&T', '556&T', '558&T', '708&T', '712&T', '713&T', '714&T', '716&T', '747&T', 'Shuttle-AshmontBraintree&T') THEN 'MBTA Bus'",
                "            ELSE 'Other'",
                "        END AS Mode",
                "    FROM [10.01]",
                ")",
                "SELECT",
                "    Alias,",
                "    Mode,",
                "    SUM(Count) AS Total_Count,",
                "    SUM(EXISTING_WLK) AS Total_EXISTING_WLK,",
                "    SUM(EXISTING_KNR) AS Total_EXISTING_KNR,",
                "    SUM(EXISTING_PNR) AS Total_EXISTING_PNR,",
                "    SUM(EXISTING_ALL) AS Total_EXISTING_ALL,",
                "    SUM(NO_BUILD_WLK) AS Total_NO_BUILD_WLK,",
                "    SUM(NO_BUILD_KNR) AS Total_NO_BUILD_KNR,",
                "    SUM(NO_BUILD_PNR) AS Total_NO_BUILD_PNR,",
                "    SUM(NO_BUILD_ALL) AS Total_NO_BUILD_ALL,",
                "    SUM(BUILD_WLK) AS Total_BUILD_WLK,",
                "    SUM(BUILD_KNR) AS Total_BUILD_KNR,",
                "    SUM(BUILD_PNR) AS Total_BUILD_PNR,",
                "    SUM(BUILD_ALL) AS Total_BUILD_ALL",
                "FROM CategorizedData",
                "GROUP BY Alias, Mode"
            ]
        },
        {
            "output_filename": "avg_weekday_non_mbta_boarding.csv",
            "sql_query": [
                "WITH CategorizedData AS (",
                "    SELECT *,",
                "        CASE",
                "            WHEN Route_ID LIKE '%&C' THEN 'CATA Bus'",
                "            WHEN Route_ID LIKE '%&M' THEN 'MWRTA Bus'",
                "            WHEN Route_ID LIKE '%&V' THEN 'MVRTA Bus'",
                "            WHEN Route_ID LIKE '%&B' THEN 'BAT Bus'",
                "        END AS Agency",
                "    FROM [10.01]",
                "    WHERE",
                "        Route_ID LIKE '%&C' OR",
                "        Route_ID LIKE '%&M' OR",
                "        Route_ID LIKE '%&V' OR",
                "        Route_ID LIKE '%&B'",
                ")",
                "SELECT",
                "    Alias,",
                "    Agency,",
                "    SUM(Count) AS Total_Count,",
                "    SUM(EXISTING_WLK) AS Total_EXISTING_WLK,",
                "    SUM(EXISTING_KNR) AS Total_EXISTING_KNR,",
                "    SUM(EXISTING_PNR) AS Total_EXISTING_PNR,",
                "    SUM(EXISTING_ALL) AS Total_EXISTING_ALL,",
                "    SUM(NO_BUILD_WLK) AS Total_NO_BUILD_WLK,",
                "    SUM(NO_BUILD_KNR) AS Total_NO_BUILD_KNR,",
                "    SUM(NO_BUILD_PNR) AS Total_NO_BUILD_PNR,",
                "    SUM(NO_BUILD_ALL) AS Total_NO_BUILD_ALL,",
                "    SUM(BUILD_WLK) AS Total_BUILD_WLK,",
                "    SUM(BUILD_KNR) AS Total_BUILD_KNR,",
                "    SUM(BUILD_PNR) AS Total_BUILD_PNR,",
                "    SUM(BUILD_ALL) AS Total_BUILD_ALL",
                "FROM CategorizedData",
                "GROUP BY Alias, Agency"
            ]
        },
        {
            "output_filename": "avg_weekday_green_line_boarding_by_branch_station.csv",
            "sql_query": [
                "SELECT",
                "    Alias,",
                "    CASE",
                "        WHEN Stop_id1 IN ('A6661&T', 'A6660&T', 'A6529&T', 'A6528&T', 'A6531&T', 'A6530&T', 'A6533&T', 'A6532&T', 'A6535&T', 'A6534&T', 'A6537&T', 'A6536&T', 'A6564&T', 'A6568&T', 'A6565&T', 'A6566&T', 'A6567&T', 'A6570&T', 'A6569&T', 'A7795&T', 'A6572&T', 'A6571&T', 'A6574&T', 'A6573&T', 'A6576&T', 'A6575&T', 'A6643&T', 'A6642&T') THEN 'Green - Trunk'",
                "        WHEN Stop_id1 IN ('A6501&T', 'A6500&T', 'A6503&T', 'A6502&T', 'A6505&T', 'A6504&T', 'A6507&T', 'A6506&T', 'A6509&T', 'A6508&T', 'A6511&T', 'A6510&T', 'A6513&T', 'A6512&T', 'A6515&T', 'A6514&T', 'A6517&T', 'A6516&T', 'A6519&T', 'A6518&T', 'A6521&T', 'A6520&T', 'A7090&T', 'A7089&T', 'A7092&T', 'A7091&T', 'A6523&T', 'A6522&T', 'A6525&T', 'A6524&T', 'A6527&T', 'A6526&T') THEN 'Green - B'",
                "        WHEN Stop_id1 IN ('A6601&T', 'A6602&T', 'A6599&T', 'A6600&T', 'A6597&T', 'A6598&T', 'A6595&T', 'A6596&T', 'A6593&T', 'A6594&T', 'A6591&T', 'A6592&T', 'A6589&T', 'A6590&T', 'A6587&T', 'A6588&T', 'A6585&T', 'A6586&T', 'A6583&T', 'A6584&T', 'A6581&T', 'A6582&T', 'A6579&T', 'A6580&T', 'A6577&T', 'A6578&T') THEN 'Green - C'",
                "        WHEN Stop_id1 IN ('A6539&T', 'A6538&T', 'A6541&T', 'A6540&T', 'A6543&T', 'A6542&T', 'A6545&T', 'A6544&T', 'A6547&T', 'A6546&T', 'A6549&T', 'A6548&T', 'A6551&T', 'A6550&T', 'A6553&T', 'A6552&T', 'A6555&T', 'A6554&T', 'A6557&T', 'A6556&T', 'A6559&T', 'A6558&T', 'A6561&T', 'A6560&T', 'A6563&T', 'A6562&T', 'A6645&T', 'A6644&T', 'A9224&T', 'A9225&T') THEN 'Green - D'",
                "        WHEN Stop_id1 IN ('A6623&T', 'A6621&T', 'A6622&T', 'A6619&T', 'A6620&T', 'A6617&T', 'A6618&T', 'A6615&T', 'A6616&T', 'A6613&T', 'A6614&T', 'A6611&T', 'A6612&T', 'A6609&T', 'A6610&T', 'A6607&T', 'A6608&T', 'A6605&T', 'A6606&T', 'A6603&T', 'A6604&T', 'A6655&T', 'A6654&T', 'A6647&T', 'A6646&T', 'A6649&T', 'A6648&T', 'A6651&T', 'A6650&T', 'A6653&T', 'A6652&T') THEN 'Green - E'",
                "    END AS Green_Line_Branch,",
                "    SUM(EXISTING_WLK) AS sum_EXISTING_WLK,",
                "    SUM(EXISTING_KNR) AS sum_EXISTING_KNR,",
                "    SUM(EXISTING_PNR) AS sum_EXISTING_PNR,",
                "    SUM(EXISTING_XFR) AS sum_EXISTING_XFR,",
                "    SUM(EXISTING_ALL) AS sum_EXISTING_ALL,",
                "    SUM(NO_BUILD_WLK) AS sum_NO_BUILD_WLK,",
                "    SUM(NO_BUILD_KNR) AS sum_NO_BUILD_KNR,",
                "    SUM(NO_BUILD_PNR) AS sum_NO_BUILD_PNR,",
                "    SUM(NO_BUILD_XFR) AS sum_NO_BUILD_XFR,",
                "    SUM(NO_BUILD_ALL) AS sum_NO_BUILD_ALL,",
                "    SUM(BUILD_WLK) AS sum_BUILD_WLK,",
                "    SUM(BUILD_KNR) AS sum_BUILD_KNR,",
                "    SUM(BUILD_PNR) AS sum_BUILD_PNR,",
                "    SUM(BUILD_XFR) AS sum_BUILD_XFR,",
                "    SUM(BUILD_ALL) AS sum_BUILD_ALL",
                "FROM [9.01]",
                "WHERE Stop_id1 IN (",
                "    'A6661&T', 'A6660&T', 'A6529&T', 'A6528&T', 'A6531&T', 'A6530&T', 'A6533&T', 'A6532&T', 'A6535&T', 'A6534&T', 'A6537&T', 'A6536&T', 'A6564&T', 'A6568&T', 'A6565&T', 'A6566&T', 'A6567&T', 'A6570&T', 'A6569&T', 'A7795&T', 'A6572&T', 'A6571&T', 'A6574&T', 'A6573&T', 'A6576&T', 'A6575&T', 'A6643&T', 'A6642&T',",
                "    'A6501&T', 'A6500&T', 'A6503&T', 'A6502&T', 'A6505&T', 'A6504&T', 'A6507&T', 'A6506&T', 'A6509&T', 'A6508&T', 'A6511&T', 'A6510&T', 'A6513&T', 'A6512&T', 'A6515&T', 'A6514&T', 'A6517&T', 'A6516&T', 'A6519&T', 'A6518&T', 'A6521&T', 'A6520&T', 'A7090&T', 'A7089&T', 'A7092&T', 'A7091&T', 'A6523&T', 'A6522&T', 'A6525&T', 'A6524&T', 'A6527&T', 'A6526&T',",
                "    'A6601&T', 'A6602&T', 'A6599&T', 'A6600&T', 'A6597&T', 'A6598&T', 'A6595&T', 'A6596&T', 'A6593&T', 'A6594&T', 'A6591&T', 'A6592&T', 'A6589&T', 'A6590&T', 'A6587&T', 'A6588&T', 'A6585&T', 'A6586&T', 'A6583&T', 'A6584&T', 'A6581&T', 'A6582&T', 'A6579&T', 'A6580&T', 'A6577&T', 'A6578&T',",
                "    'A6539&T', 'A6538&T', 'A6541&T', 'A6540&T', 'A6543&T', 'A6542&T', 'A6545&T', 'A6544&T', 'A6547&T', 'A6546&T', 'A6549&T', 'A6548&T', 'A6551&T', 'A6550&T', 'A6553&T', 'A6552&T', 'A6555&T', 'A6554&T', 'A6557&T', 'A6556&T', 'A6559&T', 'A6558&T', 'A6561&T', 'A6560&T', 'A6563&T', 'A6562&T', 'A6645&T', 'A6644&T', 'A9224&T', 'A9225&T',",
                "    'A6623&T', 'A6621&T', 'A6622&T', 'A6619&T', 'A6620&T', 'A6617&T', 'A6618&T', 'A6615&T', 'A6616&T', 'A6613&T', 'A6614&T', 'A6611&T', 'A6612&T', 'A6609&T', 'A6610&T', 'A6607&T', 'A6608&T', 'A6605&T', 'A6606&T', 'A6603&T', 'A6604&T', 'A6655&T', 'A6654&T', 'A6647&T', 'A6646&T', 'A6649&T', 'A6648&T', 'A6651&T', 'A6650&T', 'A6653&T', 'A6652&T'",
                ")",
                "GROUP BY Alias, Green_Line_Branch"
            ]
        },
        {
            "output_filename": "vehicle_availability_for_all_purpose_trip.csv",
            "sql_query": [
                "SELECT * FROM [11.04]"
            ]
        },
        {
            "output_filename": "vehicle_availability_for_non_home_based_trip.csv",
            "sql_query": [
                "SELECT * FROM [11.03]"
            ]
        },
        {
            "output_filename": "vehicle_availability_for_home_based_other_trip.csv",
            "sql_query": [
                "SELECT * FROM [11.02]"
            ]
        },
        {
            "output_filename": "vehicle_availability_for_home_based_work_trip.csv",
            "sql_query": [
                "SELECT * FROM [11.01]"
            ]
        },
        {
            "output_filename": "all_vehicle_availability_trip_purpose.csv",
            "sql_query": [
                "SELECT 'Home-Based Work' AS Trip_Purpose, * FROM [11.01] WHERE Sub_mode = 'All Fixed Guideway' AND HH_Cars = 'All car'",
                "UNION ALL",
                "SELECT 'Home-Based Other' AS Trip_Purpose, * FROM [11.02] WHERE Sub_mode = 'All Fixed Guideway' AND HH_Cars = 'All car'",
                "UNION ALL",
                "SELECT 'Non-Home-Based' AS Trip_Purpose, * FROM [11.03] WHERE Sub_mode = 'All Fixed Guideway' AND HH_Cars = 'All car'"
            ]
        }
    ]
}